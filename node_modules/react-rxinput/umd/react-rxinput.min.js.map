{"version":3,"sources":["webpack://RxInput/webpack/universalModuleDefinition","webpack://RxInput/webpack/bootstrap","webpack://RxInput/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://RxInput/external {\"root\":\"iRX\",\"commonjs2\":\"incr-regex-package\",\"commonjs\":\"incr-regex-package\",\"amd\":\"incr-regex-package\"}","webpack://RxInput/external {\"root\":\"ReactBootstrap\",\"commonjs2\":\"react-bootstrap\",\"commonjs\":\"react-bootstrap\",\"amd\":\"react-bootstrap\"}","webpack://RxInput/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rxPlaceHolder","RegExp","convertMask","KEYCODE_Z","KEYCODE_Y","isUndo","e","ctrlKey","metaKey","keyCode","shiftKey","isRedo","getSelection","el","start","end","rangeEl","clone","undefined","selectionStart","selectionEnd","focus","createTextRange","duplicate","moveToBookmark","document","selection","createRange","getBookmark","setEndPoint","text","length","mapImg","DONE","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","className","MORE","OK","render","this","props","mask","pattern","getInputTracker","map","_ref","code","Component","hashStr","str","hashVal","charCodeAt","RxInputBase","_Component2","_classCallCheck","_this2","_possibleConstructorReturn","state","getInitialState","_onChange","_onKeyDown","_onKeyPress","_onPaste","_onFocus","_onBlur","input","_inherits","options","RXInputMask","componentWillReceiveProps","nextProps","toString","setPattern","setState","setValue","_updateMaskSelection","_updateInputSelection","sel1","sel2","eqSel","setSelectionRange","collapse","moveStart","moveEnd","select","setSelection","onFocus","fireChange","onChange","opt","_getValue","target","maskValue","getValue","sizeDiff","backspace","_getDisplayValue","_this3","isKey","keyV","_C","test","action","preventDefault","oldVal","undo","redo","del","altKey","sel","left","right","ch","toUpperCase","toLowerCase","insert","paste","clipboardData","getData","setTimeout","_getMaskList","flag","list","minCharsList","emptyValue","selected","split","find","isMeta","getMaxWidth","valueList","maxWidth","dflt","arguments","Math","max","lenList","replace","minVal","val","minV","apply","getMapImg","getRxPlaceHolder","getInput","inputClassName","getPopoverData","headers","placeholder","_this4","MAXWIDTH","hasSmallHeader","concat","v","match","_this5","_props","size","popover","showAll","_objectWithoutProperties","patternLength","_extends","style","padding","ref","aDomElem","maxLength","onKeyDown","onKeyPress","onPaste","onBlur","strCmp1","b","nameA","nameB","RxInput","_RxInputBase","_createPopover","_this7","smallHeader","SPANSTYLE","width","TS","PADDING","console","log","height","display","overflow","me","react_bootstrap__WEBPACK_IMPORTED_MODULE_1__","id","fontSize","marginTop","marginBottom","sort","onClick","popOverData","myPopover","ok","isDone","marginBotton","paddingLeft","color","fontStyle","trigger","placement","overlay"],"mappings":"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","file":"react-rxinput.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"incr-regex-package\"), require(\"react-bootstrap\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"incr-regex-package\", \"react-bootstrap\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RxInput\"] = factory(require(\"react\"), require(\"incr-regex-package\"), require(\"react-bootstrap\"));\n\telse\n\t\troot[\"RxInput\"] = factory(root[\"React\"], root[\"iRX\"], root[\"ReactBootstrap\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","//component.js\r\nimport React, {Component} from 'react'\r\nimport { Popover,OverlayTrigger } from 'react-bootstrap';\r\nimport RX, {convertMask,contract,RXInputMask,isMeta} from \"incr-regex-package\";\r\n\r\n\r\n// const RX = require(\"incr-regex-package\");\r\n// const {convertMask,contract,RXInputMask,isMeta} = RX;\r\n/** \r\n * Copyright (c) 2016, Nurul Choudhury\r\n * \r\n * Permission to use, copy, modify, and/or distribute this software for any\r\n * purpose with or without fee is hereby granted, provided that the above\r\n * copyright notice and this permission notice appear in all copies.\r\n * \r\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\n * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\n * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\n * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\n * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\n * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\n * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n * \r\n */\r\n\r\n//\r\n// Modified from https://github.com/insin/react-maskedinput\r\n//  This was originally written by insin - on GIT hub\r\n//  The code worked fine for fixed formatted input mask, but is not so useful for\r\n//  varible mask based on regular expression (RegExp)\r\n//  That capability regires this implementation of Regexp, and provides incremental processing of regular expression\r\n// Amost the entire original code has been replaces but the original interfaces remain\r\n//\r\n\r\n\r\n\r\n\r\n\r\n\r\n//const convertMask = convertMask;\r\nconst rxPlaceHolder = new RegExp(convertMask('[?*]'));\r\nconst KEYCODE_Z = 90\r\nconst KEYCODE_Y = 89\r\n\r\n\r\nfunction except(object,list) {\r\n\tlet result = {};\r\n\tlet keys = list;\r\n\r\n\tfor (let key in object) {\r\n\t\tif (keys.indexOf(key) === -1) {\r\n\t\t\tresult[key] = object[key];\r\n\t\t}\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nfunction isUndo(e) {\r\n\treturn (e.ctrlKey || e.metaKey) && e.keyCode === (e.shiftKey ? KEYCODE_Y : KEYCODE_Z)\r\n}\r\n\r\nfunction isRedo(e) {\r\n\treturn (e.ctrlKey || e.metaKey) && e.keyCode === (e.shiftKey ? KEYCODE_Z : KEYCODE_Y)\r\n}\r\n\r\nfunction getSelection (el) {\r\n\tlet start, end, rangeEl, clone\r\n\r\n\tif (el.selectionStart !== undefined) {\r\n\t\tstart = el.selectionStart;\r\n\t\tend = el.selectionEnd;\r\n\t}\r\n\telse {\r\n\t\ttry {\r\n\t\t\tel.focus();\r\n\t\t\trangeEl = el.createTextRange();\r\n\t\t\tclone = rangeEl.duplicate();\r\n\r\n\t\t\trangeEl.moveToBookmark(document.selection.createRange().getBookmark());\r\n\t\t\tclone.setEndPoint('EndToStart', rangeEl);\r\n\r\n\t\t\tstart = clone.text.length;\r\n\t\t\tend = start + rangeEl.text.length;\r\n\t\t}\r\n\t\tcatch (e) { /* not focused or not visible */ }\r\n\t}\r\n\r\n\treturn { start, end }\r\n}\r\n\r\nfunction setSelection(el, selection) {\r\n\tlet rangeEl\r\n\r\n\ttry {\r\n\t\tif (el.selectionStart !== undefined) {\r\n\t\t\tel.focus();\r\n\t\t\tel.setSelectionRange(selection.start, selection.end);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tel.focus()\r\n\t\t\trangeEl = el.createTextRange();\r\n\t\t\trangeEl.collapse(true);\r\n\t\t\trangeEl.moveStart('character', selection.start);\r\n\t\t\trangeEl.moveEnd('character', selection.end - selection.start);\r\n\t\t\trangeEl.select();\r\n\t\t}\r\n\t}\r\n\tcatch (e) { /* not focused or not visible */ }\r\n}\r\n\r\nfunction supportArrowNavigation(mask) {\r\n\t return (contract.isFunc(mask.arrowAction));  \r\n}\r\n\r\n\r\n\r\nfunction asStr(anObj) {\r\n\treturn JSON.stringify(anObj);\r\n}\r\n\r\nfunction eqSel(sel1,sel2) {\r\n\tif( sel1 === sel2 ) return true;\r\n\tif( sel1 === undefined || sel2 === undefined) return false;\r\n\treturn sel1.start === sel2.start && sel1.end === sel2.end;\r\n}\r\n\r\nfunction selAt(sel, x) {\r\n\tif( !sel && x === 0 ) return true;\r\n\treturn sel.start === x && (sel.end === undefined || sel.end === x);\r\n}\r\n\r\n\r\n\r\nconst mapImg = {\r\n\t\"DONE\": ([<span className=\"glyphicon glyphicon-ok form-control-feedback\"></span>, \"\"] ),\r\n\t\"MORE\" : ([<span className=\"glyphicon glyphicon-arrow-right form-control-feedback\"></span>, \" has-warning\"]),\r\n\t\"OK\": ([<span className=\"glyphicon glyphicon-option-horizontal form-control-feedback\"></span>, \"\"]),\r\n};\r\n\r\n//const LOG = (a, msg='') =>  { console.log(msg+\": \"+ a); return a; }\r\nconst LOG = x => x;\r\nclass RxStatus extends Component {\r\n\t render() {\r\n\t\t function printElem([code,typ]) {\r\n\t\t\t\tif( typ === undefined ) return code;\r\n\t\t\t\treturn (<b>{code}</b>)\r\n\t\t }\r\n\t\t let t = this.props.mask.pattern.getInputTracker() || []; \r\n\t\t return (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t {t.map(printElem)}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t }\r\n}\r\n\r\n\r\n\r\n\r\nfunction minV(minVal) {\r\n\treturn ( val => Math.max(minVal,val)  );  \r\n}\r\n\r\nexport \tfunction hashStr(str) {\r\n\t\t\t\tlet hashVal = 5381,\r\n\t\t\t\t\t\ti    = str.length\r\n\r\n\t\t\t\twhile(i)\r\n\t\t\t\t\thashVal = (hashVal * 33) ^ str.charCodeAt(--i)\r\n\t\t\t\treturn (hashVal >>> 0)+12;\r\n\t\t }\r\n\r\n\r\nexport class RxInputBase extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = this.getInitialState();\r\n\t\tthis._onChange = this._onChange.bind(this);\r\n\t\tthis._onKeyDown = this._onKeyDown.bind(this);\r\n\t\tthis._onKeyPress = this._onKeyPress.bind(this);\r\n\t\tthis._onPaste = this._onPaste.bind(this);\r\n\t\tthis._onFocus = this._onFocus.bind(this);\r\n\t\tthis._onBlur = this._onBlur.bind(this);\r\n\t\tthis.input = null;\r\n\t}\r\n\t// propTypes: {\r\n\t//   mask: React.PropTypes.object.isRequired,\r\n\t//   name: React.PropTypes.string.isRequired,\r\n\t//   popover: React.PropTypes.string,\r\n\t//   selection: React.PropTypes.object,\r\n\t//   value: React.PropTypes.string,\r\n\t// },\r\n\r\n\t// get input() {\r\n\t// \treturn this.myRef.current;\r\n\t// }\r\n\r\n\tgetInitialState() {\r\n\t\tlet options = {\r\n\t\t\tpattern: (this.props.mask || /.*/),\r\n\t\t\tvalue: (this.props.value||'')\r\n\t\t};\r\n\t\treturn { \r\n\t\t\tfocus: false,\r\n\t\t\tvalue: (this.props.value||''),\r\n\t\t\tselection: this.props.selection,\r\n\t\t\tmask: new RXInputMask(options)\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (this.props.mask.toString() !== nextProps.mask.toString()) {\r\n\t\t\t//this.state.mask.setPattern(nextProps.mask, {value: this.state.mask.getRawValue()});\r\n\t\t\tthis.state.mask.setPattern(nextProps.mask, {value: nextProps.value, selection: this.state.mask.selection});\r\n\t\t\tthis.setState({ selection: this.state.selection, value: nextProps.value});\r\n\t\t}\r\n\t\telse if (this.props.value !== nextProps.value) {\r\n\t\t\t\t\tthis.state.mask.setValue(nextProps.value);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// static getDerivedStateFromProps(nextProps, state) {\r\n\t// \t//if (this.props.mask.toString() !== nextProps.mask.toString()) {\r\n\t//     let value = nextProps.value||'';\r\n\t//     console.log('getDerivedStateFromProps',{oldValue: state.value, value, oldmask:state.mask.pattern.toString(),mask: nextProps.mask.toString() });\r\n\t// \tif (state.mask.pattern.toString() !== nextProps.mask.toString()) {\r\n\t// \t\t//this.state.mask.setPattern(nextProps.mask, {value: this.state.mask.getRawValue()});\r\n\t// \t\tstate.mask.setPattern(nextProps.mask, {value, selection: state.mask.selection});\r\n\t// \t\t//this.setState({ selection: this.state.selection, value: nextProps.value});\r\n\t// \t\treturn {...state, value: nextProps.value};\r\n\t// \t}\r\n\t// \telse if (state.value !== value) {\r\n\t// \t\tstate.mask.setValue(nextProps.value);\r\n\t// \t\tconsole.log(\"value change\");\r\n\t// \t\treturn {...state };\r\n\t// \t}\r\n\t// \treturn null;\r\n\t// }\r\n\r\n\r\n\t_updateMaskSelection() {\r\n\t\tthis.state.mask.selection = getSelection(this.input);\r\n\t}\r\n\r\n\t_updateInputSelection() {\r\n\t\tif( !eqSel(getSelection(this.input),this.state.mask.selection)) setSelection(this.input, this.state.mask.selection);\r\n\t}\r\n\r\n\t_onFocus(e) {\r\n\t\t\tif(this.props.onFocus) this.props.onFocus(e);\r\n\t}\r\n\r\n\t_onBlur(e) {\r\n\t\t this.fireChange(e);\r\n\t}\r\n\r\n\tfireChange(e) {\r\n\t\tif (this.props.onChange) {\r\n\t\t\tlet opt = {value: this.state.mask._getValue(), target: e.target, name: this.props.name, mask: this.state.mask };\r\n\t\t\t//this.props.onChange(opt); \r\n\t\t\tthis.props.onChange({target:opt}); \r\n\t\t}\r\n\t}\r\n\r\n\t_onChange(e) {\r\n\t\t// console.log('onChange', asStr(getSelection(this.input)), e.target.value)\r\n\t\tconst mask = this.state.mask;\r\n\t\tlet maskValue = mask.getValue()\r\n\t\tif (e.target.value !== maskValue) {\r\n\t\t\t// Cut or delete operations will have shortened the value\r\n\t\t\tif (e.target.value.length < maskValue.length) {\r\n\t\t\t\tlet sizeDiff = maskValue.length - e.target.value.length\r\n\t\t\t\tthis._updateMaskSelection();\r\n\t\t\t\tmask.selection.end = mask.selection.start + sizeDiff\r\n\t\t\t\tmask.backspace();\r\n\t\t\t\t//console.log(\"Fix maskValue\", maskValue, \"diff:\", sizeDiff, \"target value: \", e.target.value);\r\n\t\t\t}\r\n\t\t\tlet value = this._getDisplayValue();\r\n\t\t\te.target.value = value\r\n\t\t\tif (value) {\r\n\t\t\t\tthis._updateInputSelection()\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.setState({selection: this.mask.selection});\r\n\t\tthis.fireChange(e)\r\n\t\t// console.log(\"on change\", e)\r\n\t}\r\n\r\n\t\r\n\r\n\t_onKeyDown(e) {\r\n\t\tconst mask = this.state.mask;\r\n\t\tconst isKey = (keyV) => (e) => e.key === keyV;\r\n\r\n\t\tconst _C = ( test, action) => {\r\n\t\t\t\t\t\tif( !test(e) )  return false;\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tthis._updateMaskSelection();\r\n\t\t\t\t\t\tif(action()) {\r\n\t\t\t\t\t\t\t\tlet oldVal = e.target.value\r\n\t\t\t\t\t\t\t\tlet value = this._getDisplayValue();\r\n\t\t\t\t\t\t\t\te.target.value = value;\r\n\t\t\t\t\t\t\t\t//console.log(action+\":getDisplayValue\", value);\r\n\t\t\t\t\t\t\t\tif (value) {   this._updateInputSelection();    }\r\n\t\t\t\t\t\t\t\tif (this.props.onChange && oldVal != value) {\r\n\t\t\t\t\t\t\t\t\t\t//let opt = {target: {value: mask._getValue()}};\r\n\t\t\t\t\t\t\t\t\t\t//this.props.onChange(opt);\r\n\t\t\t\t\t\t\t\t\t\tthis.fireChange(e);\r\n\t\t\t\t\t\t\t\t\t\t//console.log(\"on change\", e)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// console.log(\"on change1\", e)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.setState({selection: mask.selection});\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t};\r\n\t\t //console.log('onKeyDown',mask, asStr(getSelection(this.input))+\"/\"+asStr(mask.selection), e.key, e.keyCode, e.target.value)\r\n\t\t if(_C(isUndo,()=>mask.undo()) || _C(isRedo,()=>mask.redo()) || \r\n\t\t\t_C(isKey(\"Backspace\"),()=>mask.backspace()) || \r\n\t\t\t_C(isKey(\"Delete\"),()=>mask.del())) return; \r\n\r\n\t\tif (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey || e.key === 'Enter' || e.key === 'Tab') { return }\r\n\t\tif( e.key === 'ArrowLeft' || e.key == 'ArrowRight') {\r\n\t\t\t// Check if mask supports arrow support\r\n\t\t\tlet sel = getSelection(this.input);\r\n\t\t\t//mask.selection = sel;\r\n\t\t\tif( sel.start === sel.end && mask.left !== undefined) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tif( e.key === 'ArrowLeft' ) mask.left(sel);\r\n\t\t\t\telse mask.right(sel);\r\n\t\t\t\tthis._updateInputSelection();\r\n\t\t\t\t//this.refs.debug.props.forceUpdate();\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(\"Arrow Action support:\", supportArrowNavigation(mask), \" value:\",this._getDisplayValue(), \" selection: \", asStr(getSelection(this.input)), asStr(mask.selection));\r\n\t\t}    \r\n\t}\r\n\r\n\r\n\r\n\t_onKeyPress(e) {\r\n\t\tconst mask = this.state.mask;\r\n\t\t //console.log('onKeyPress', asStr(getSelection(this.input)),asStr(mask.selection), e.key, e.target.value)\r\n\r\n\t\t// Ignore modified key presses\r\n\t\t// Ignore enter key to allow form submission\r\n\t\tif (e.metaKey || e.altKey || e.ctrlKey || e.key === 'Enter') { return }\r\n\t\tlet selX = getSelection(this.input);\r\n\t\tlet oldMaskX = mask.getSelection();\r\n\t\te.preventDefault();\r\n\t\tthis._updateMaskSelection();\r\n\r\n\t\tif (insert(e.key)) {\r\n\t\t\tlet oldVal = e.target.value;\r\n\t\t\tlet value = mask.getValue();\r\n\t\t\te.target.value = value;\r\n\t\t\t//console.log(\"keyPress:getDisplayValue\", this._getDisplayValue(),  \" selection: \", asStr(selX)+\"/\"+asStr(mask.selection)+\"<\"+asStr(oldMaskX));\r\n\t\t\tthis._updateInputSelection();\r\n\t\t\tthis.setState({selection: mask.selection});\r\n\t\t\tif (this.props.onChange && oldVal != value) {\r\n\t\t\t\t\t\tlet opt = {target: {value: mask._getValue()}};\r\n\t\t\t\t\t\tthis.props.onChange(opt);\r\n\t\t\t\t\t \r\n\t\t\t}\r\n\t\t\t //console.log(\"on change\", e)\r\n\t\t}\r\n\r\n\t\tfunction insert(ch) {\r\n\t\t\tif(mask.input(ch)) return true;\r\n\t\t\tif(ch !== ch.toUpperCase()) return mask.input(ch.toUpperCase());\r\n\t\t\telse if( ch != ch.toLowerCase()) return mask.input(ch.toLowerCase());\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t_onPaste(e) {\r\n\t\tconst mask = this.state.mask;\r\n\t\t //console.log('onPaste', asStr(getSelection(this.input)), e.clipboardData.getData('Text'), e.target.value)\r\n\r\n\t\te.preventDefault()\r\n\t\tthis._updateMaskSelection()\r\n\t\t// getData value needed for IE also works in FF & Chrome\r\n\t\t//console.log(\"paste: \", e.clipboardData.getData('Text'));\r\n\t\tif (mask.paste(e.clipboardData.getData('Text'))) {\r\n\t\t\te.target.value = mask.getValue();\r\n\t\t\t//console.log(\"undo:getDisplayValue\", this._getDisplayValue());\r\n\t\t\t// Timeout needed for IE\r\n\t\t\tsetTimeout(this._updateInputSelection, 0)\r\n\t\t\t//this.props.onChange(e);\r\n\t\t\tthis.setState({selection: mask.selection});\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t_getMaskList(flag) {\r\n\t\t const list = this.state.mask.minCharsList(!!flag);\r\n\t\t if( list && list.length < 20 ) return list;\r\n\t\t return this.state.mask.minCharsList();\r\n\t}\r\n\r\n\t_getDisplayValue() {\r\n\t\tlet value = this.state.mask.getValue()\r\n\t\treturn value === this.state.mask.emptyValue ? '' : value\r\n\t}\r\n\r\n\tselected(str,e) {\r\n\t\t//console.log(\"Selected: \"+str);\r\n\t\tif( !str.split('').find(c => isMeta(c)? c : undefined) ) {\r\n\t\t\tconst mask = this.state.mask;\r\n\t\t\tmask.setValue(str);\r\n\t\t\tthis.setState({mask: mask});\r\n\t\t\t//console.log(\"Selected(done): \"+str);\r\n\t\t}\r\n\t}\r\n\r\n\tgetMaxWidth(valueList, maxWidth, dflt=200) {\r\n\t\tif(maxWidth) return Math.max(maxWidth, dflt);\r\n\t\tif( !valueList || !valueList.length ) return dflt;\r\n\t\tconst len = s => s.replace(/\\u0332/g,\"\").length;\r\n\t\tlet lenList = valueList.map(len).map(minV(20))\r\n\t\treturn 12*Math.max.apply(null, lenList);\r\n\t}\r\n\r\n\tgetMapImg() { return mapImg; }\r\n\tgetRxPlaceHolder() { return rxPlaceHolder; }\r\n\tgetInput(input) { return input; }\r\n\r\n\tinputClassName() { return \"form-control\"; }\r\n\r\n\tgetPopoverData(valueList,headers, maxWidth,placeholder) {\r\n\t\tconst MAXWIDTH = this.getMaxWidth(valueList, maxWidth,300)\r\n\t\t \r\n\t\t if( !valueList || valueList.length <= 1 ) {\r\n\t\t\tif( !placeholder ) return undefined; //{valueList: [\"\"], headers, MAXWIDTH, hasSmallHeader: false} ;\r\n\t\t\telse valueList = [placeholder];\r\n\t\t }\r\n\r\n\r\n\t\t let val = this._getDisplayValue() || '';\r\n\t\t let ph = placeholder || this.state.mask.emptyValue;\r\n\t\t let popList = [val, ph ].concat(valueList);\r\n\t\t \r\n\t\t let hasSmallHeader = popList.find(v => v.match(this.getRxPlaceHolder()));\r\n\t\t return {valueList, headers, MAXWIDTH, hasSmallHeader}\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet {mask, size, placeholder,popover,selection,showAll,  ...props} = this.props;\r\n\t\tlet patternLength = this.state.mask.pattern.length;\r\n\r\n\t\tconst setRef = aDomElem => {\r\n\t\t\tthis.input = aDomElem;\r\n\t\t}\r\n\t\t\r\n\t\tlet input = (\r\n\t\t\t<input \r\n\t\t\t    style={{padding: \"3px 0px 3px 0px\"}}\r\n\t\t\t    className={this.inputClassName()}\r\n\t\t\t\t{...props}\r\n\t\t\t\tref={setRef}\r\n\t\t\t\tmaxLength={patternLength}\r\n\t\t\t\tonChange={this._onChange}\r\n\t\t\t\tonKeyDown={this._onKeyDown}\r\n\t\t\t\tonKeyPress={this._onKeyPress}\r\n\t\t\t\tonPaste={this._onPaste}\r\n\t\t\t\tonFocus={this._onFocus}\r\n\t\t\t\tonBlur={this._onBlur}\r\n\t\t\t\tplaceholder={placeholder || this.state.mask.emptyValue}\r\n\t\t\t\tsize={size || patternLength}\r\n\t\t\t\tvalue={this._getDisplayValue()}\t\t\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn   this.getInput(input, placeholder);\r\n\t}\r\n}\r\n\r\n//const LOG = (first, ...params) => {console.log(first, ...params); return first; }\r\nfunction strCmp1(a,b) {\r\n\tlet nameA = a.toUpperCase(); // ignore upper and lowercase\r\n\tlet nameB = b.toUpperCase(); // ignore upper and lowercase\r\n\tif (nameA < nameB) {\r\n\t\treturn -1;\r\n\t}\r\n\tif (nameA > nameB) {\r\n\t\treturn 1;\r\n\t}\r\n\r\n\t// names must be equal\r\n\treturn 0;\r\n}\r\n\r\n\r\nexport class RxInput extends RxInputBase {\r\n\t\r\n\t_createPopover(props) {\r\n\t\tif( !props ) return <span />;\r\n\t\t const {MAXWIDTH, hasSmallHeader, valueList, headers} = props;\r\n\t\t let smallHeader = hasSmallHeader ? (smallHeader = <pre className=\"text-muted small-text\">{convertMask('? - optional,   * - zero or more')}</pre>):\"\";\r\n\t\t const SPANSTYLE = {width: MAXWIDTH-50, maxWidth: MAXWIDTH-50};\r\n\t\t let TS, PADDING;\r\n\t\t console.log(\"valueList\", valueList);\r\n\t\t if(valueList.length> 20) {\r\n\t\t\tTS = {height: \"400px\", display: \"block\", overflow: \"auto\"};\r\n\t\t\tPADDING =  <div> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>;\r\n\t\t }\r\n\t\t let me = this;\r\n\t\t return ( \r\n\t\t\t\t\t <Popover  id={this.props.name+\"myPopover\"} className=\"col-xs-10 col-md-10\" style={{width: MAXWIDTH,maxWidth: MAXWIDTH, fontSize: \"10px\", marginTop: \"10px\", marginBottom: \"10px\"}}> \r\n\t\t\t\t\t\t\t\t{smallHeader}\r\n\t\t\t\t\t\t\t\t<table key={this.props.name+\"myPopover1\"} className=\"table-responsive table-striped table-hover table-condensed col-xs-10 col-md-10\" style={SPANSTYLE}>\r\n\t\t\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<tr>{headers.map((e) => (<th key={this.props.name+e}>{e}</th>))}</tr>\r\n\t\t\t\t\t\t\t\t\t\t</thead> \r\n\t\t\t\t\t\t\t\t\t\t<tbody style={TS}>\r\n\t\t\t\t\t\t\t\t\t\t{ valueList.sort(strCmp1).map((l) => (<tr onClick={(e) => me.selected(l,e)} key={this.props.name+\"L\"+hashStr(l)}><td onClick={(e) => me.selected(l,e)}>{l}</td></tr>) ) }\r\n\t\t\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t {PADDING}\r\n\t\t\t\t\t\t</Popover>\r\n\t\t\t\t\t\t \r\n\t\t\t\t);\r\n\t\t\t\t\t\r\n\t\t}\r\n\r\n\t\tgetInput(input, placeholder) {\r\n\t\t\t\r\n\t\t\tlet OK;\r\n\t\t\tconst warningStyle = {marginBotton: \"0px\", fontSize: \"70%\", color: 'red', fontStyle: 'italic'};\r\n\t\t\tlet mapImg = this.getMapImg();\r\n\t\t\t//let status = <RxStatus mask={this.state.mask};\r\n\t\t\tlet status = \"\";\r\n\t\t\tlet popOverData = this.getPopoverData(this._getMaskList(this.props.showAll !== 'no'),['Possible Values'],undefined,placeholder);\r\n\t\t\t\r\n\t\t\tlet myPopover = this.props.popover ? this._createPopover(popOverData): (<span/>);\r\n\t\t\tlet ok = this.state.mask.isDone();\r\n\t\t\tif(ok) OK = (mapImg[this.state.mask.isDone()]); //<span className=\"input-group-addon\">.00</span>;  //\r\n\t\t\treturn (\r\n\t\t\t\t\t<div  style={{marginBotton: \"0px\", paddingLeft: \"100px\"}}>\r\n\t\t\t\t\t\t<div style={warningStyle} >\r\n\t\t\t\t\t\t\t\t{ok} &nbsp;\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{status}\r\n\t\t\t\t\t\t<div className={ \"form-group has-feedback\" + OK[1]}>\r\n\t\t\t\t\t\t<OverlayTrigger trigger=\"focus\" style={{marginBotton: \"0px\"}}  placement=\"bottom\" overlay={myPopover}>\r\n\t\t\t\t\t\t\t{input}\r\n\t\t\t\t\t\t</OverlayTrigger>\r\n\t\t\t\t\t\t{OK[0]}</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t);\r\n\r\n\t\t}\r\n\t\r\n}"],"sourceRoot":""}